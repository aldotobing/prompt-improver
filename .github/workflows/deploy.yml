name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

# Allow one concurrent deployment
concurrency: 
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: 'npm'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile --network-timeout 300000

      - name: Clean build
        run: |
          rm -rf .next
          rm -rf out
          rm -rf .cache

      - name: Build the project
        run: |
          # Set environment variables
          export NODE_OPTIONS=--max-old-space-size=8192
          export NODE_ENV=production
          export NEXT_TELEMETRY_DISABLED=1
          
          # Run the custom build script
          node scripts/build.js
        env:
          NODE_OPTIONS: --max-old-space-size=8192
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1
          NEXT_PUBLIC_CLOUDFLARE_AI_URL: ${{ secrets.NEXT_PUBLIC_CLOUDFLARE_AI_URL }}
          NEXT_PUBLIC_CLOUDFLARE_AI_IMG_URL: ${{ secrets.NEXT_PUBLIC_CLOUDFLARE_AI_IMG_URL }}
          NEXT_PUBLIC_CLOUDFLARE_DEEPSEEK_AI_URL: ${{ secrets.NEXT_PUBLIC_CLOUDFLARE_DEEPSEEK_AI_URL }}

      - name: Create CNAME file
        run: |
          mkdir -p ./out
          echo "prompt.aldotobing.online" > ./out/CNAME

      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
          publish_branch: gh-pages
          force_orphan: true
          cname: prompt.aldotobing.online
          enable_jekyll: false
          full_commit_message: 'Deploy to GitHub Pages: ${{ github.sha }}'
